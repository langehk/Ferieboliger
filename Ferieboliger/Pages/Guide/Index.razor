@page "/guide"

@using Ferieboliger.BLL.Services;

@inject IRedigerbarSideService redigerbarSideService

<BlazoredTextEditor @ref="@QuillHtml">
    <ToolbarContent>
        <select class="ql-header">
            <option selected=""></option>
            <option value="1"></option>
            <option value="2"></option>
            <option value="3"></option>
            <option value="4"></option>
            <option value="5"></option>
        </select>
        <span class="ql-formats">
            <button class="ql-bold"></button>
            <button class="ql-italic"></button>
            <button class="ql-underline"></button>
            <button class="ql-strike"></button>
        </span>
        <span class="ql-formats">
            <select class="ql-color"></select>
            <select class="ql-background"></select>
        </span>
        <span class="ql-formats">
            <button class="ql-list" value="ordered"></button>
            <button class="ql-list" value="bullet"></button>
        </span>
        <span class="ql-formats">
            <button class="ql-link"></button>
        </span>
    </ToolbarContent>
    <EditorContent>
        <h4>This Toolbar works with HTML</h4>
        <a href="http://BlazorHelpWebsite.com">
            BlazorHelpWebsite.com
        </a>
    </EditorContent>
</BlazoredTextEditor>
<br />
<button class="btn btn-primary"
        @onclick="@(async() =>  await GetHTML(1))">
    Get HTML
</button>
<button class="btn btn-primary"
        @onclick="@(async() => await SetHTML(2))">
    Set HTML
</button>
<br />
<div>
    <br />
    @((MarkupString)QuillHTMLContent)
    @QuillHTMLContent
</div>
<br />

@code {

    BlazoredTextEditor QuillHtml;
    string QuillHTMLContent;

    public async Task GetHTML(int id)
    {
        QuillHTMLContent = await this.QuillHtml.GetHTML();
        await redigerbarSideService.SaveRedigerbarSideContentById(id, QuillHTMLContent);

        StateHasChanged();
    }

    public async Task SetHTML(int id)
    {
        string QuillContent = await redigerbarSideService.GetRedigerbarSideContentById(id);

        await this.QuillHtml.LoadHTMLContent(QuillContent);
        StateHasChanged();
    }
}