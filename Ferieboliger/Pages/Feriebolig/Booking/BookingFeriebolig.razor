@inject Ferieboliger.BLL.Services.IBookingService bookingService
@inject Ferieboliger.BLL.Services.IFerieboligService ferieboligService
@inject Ferieboliger.BLL.Services.IBrugerService brugerService
@inject NavigationManager navigationManager;

@using Ferieboliger.DAL.Models.Enums;
@using System.ComponentModel.DataAnnotations;
<p class="feriebolig__overskrift">Book ferieboligen</p>

<EditForm Model="booking" OnValidSubmit="BookFeriebolig">
    <ObjectGraphDataAnnotationsValidator />
    <DataAnnotationsValidator />
    <MudCard Elevation="0" Class="d-flex flex-column tilfoejFeriebolig__kategori">
        <MudField Label="Leveringsadresse til nøgler" Variant="Variant.Outlined">
            <MudTextField @bind-Value="booking.Leveringsadresse.Vej" For="@(() => booking.Leveringsadresse.Vej)" Label="Gade og husnummer" Variant="Variant.Text"></MudTextField>
            <MudCard Elevation="0" Class="d-flex tilfoejFeriebolig__fieldset">
                <MudTextField @bind-Value="booking.Leveringsadresse.Postnummer" For="@(() => booking.Leveringsadresse.Postnummer)" Label="Postnummer" Variant="Variant.Text"></MudTextField>
                <MudTextField @bind-Value="booking.Leveringsadresse.By" For="@(() => booking.Leveringsadresse.By)" Label="By" Variant="Variant.Text"></MudTextField>
            </MudCard>
            <MudTextField @bind-Value="booking.Leveringsadresse.Land" For="@(() => booking.Leveringsadresse.Land)" Label="Land" Variant="Variant.Text"></MudTextField>
            <MudCheckBox @bind-Checked="@booking.Leveringsadresse.Firmaadresse" Label="Skal nøglerne sendes til firmaadresse?"></MudCheckBox>
            @if (booking.Leveringsadresse.Firmaadresse)
            {
                <MudTextField @bind-Value="booking.Leveringsadresse.Afdeling" Label="Afdeling" Variant="Variant.Text"></MudTextField>
            }
        </MudField>
    </MudCard>

    <MudCard Elevation="0" Class="d-flex flex-column tilfoejFeriebolig__kategori">
        <MudField Label="Pensionist" Variant="Variant.Outlined">
            <MudTextField @bind-Value="booking.PensionistNavn" Label="Navn" Variant="Variant.Text"></MudTextField>
            <MudTextField @bind-Value="booking.PensionistEmail" For="@(() => booking.PensionistEmail)" Label="Email" Variant="Variant.Text"></MudTextField>
            <MudTextField @bind-Value="booking.PensionistTelefon" Label="Telefon" Variant="Variant.Text"></MudTextField>
        </MudField>
    </MudCard>

    <MudField Label="Dato" Variant="Variant.Outlined">
        <MudDateRangePicker @ref="_picker" Label="With action buttons" ShowWeekNumbers="true" @bind-DateRange="_dateRange" MinDate="DateTime.Now">
            <PickerActions>
                <MudButton OnClick="@(() => _picker.Close(false))">Cancel</MudButton>
                <MudButton Color="Color.Primary" OnClick="@(() => _picker.Close())">Ok</MudButton>
            </PickerActions>
        </MudDateRangePicker>
    </MudField>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" OnClick="Fortryd">Fortryd</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Book</MudButton>
    </MudCardActions>
</EditForm>

@code {

    [Parameter]
    public Feriebolig Model { get; set; }

    private const string PENSIONIST_EMAIL = "pensionist@pensionist.com"; 

    public Booking booking = new Booking();
    private Bruger bruger = new Bruger(); 

    MudDateRangePicker _picker;
    public DateRange _dateRange = new DateRange(DateTime.Now.AddDays(1).Date, DateTime.Now.AddDays(8).Date);

    public List<Booking> currentReservations = new List<Booking>();

    private bool checkDate(DateTime input)
    {
        currentReservations = Model.Bookinger.ToList();

        // Her checker vi om datoen er Lørdag, og sikrer at der ikke findes tidligere bookinger.
        if (input.Date.DayOfWeek == DayOfWeek.Saturday && !currentReservations.Any(x => x.UdlejDato <= input && x.AfrejseDato > input))
        {
            return false;
        }
        else
        {
            return true;
        }
    }

    public void Fortryd()
    {
        booking = new Booking();
        _dateRange = new DateRange(DateTime.Now.Date, DateTime.Now.AddDays(7).Date);
    }

    private async Task BookFeriebolig()
    {
        _picker.Close();
        
        //I den brugervendtedel af applikationen skal vi selvfølgelig søge brugeren frem, der er logget ind
        bruger = await brugerService.GetUserByEmailAsync(PENSIONIST_EMAIL);

        booking.Pris = Model.PrisHoej;
        booking.PointPris = BookingPointPris.HoejSaeson;
        booking.UdlejDato = _picker.DateRange.Start.Value;
        booking.AfrejseDato = _picker.DateRange.End.Value;
        booking.FerieboligId = Model.Id;
        booking.BrugerId = bruger.Id; 

        var createdBooking = await bookingService.CreateBookingAsync(booking);

        navigationManager.NavigateTo($"/kvittering/{createdBooking.Id}");

    }
}
