@inject Ferieboliger.BLL.Services.IBookingService bookingService
@using Ferieboliger.DAL.Models.Enums;

<MudDateRangePicker @ref="_picker" Label="With action buttons" ShowWeekNumbers="true" DateRangeChanged="OnChangeHandler" IsDateDisabledFunc="checkDate">

    <PickerActions>

        <MudButton OnClick="BookFeriebolig" Color="Color.Primary">Book</MudButton>

        <MudButton OnClick="@(() => _picker.Close(false))">Cancel</MudButton>

        <MudButton Color="Color.Primary" OnClick="@(() => _picker.Close())">Ok</MudButton>
    </PickerActions>
</MudDateRangePicker>

@if (displayError)
{
<MudItem md="4" xs="12">
    <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Square="true" Class="my-2">Du må kun reservere 3 uger. </MudAlert>
</MudItem>
}

@* Valg af UGE *@

@* Se pris pr. uge *@

@code {

    [Parameter]
    public Feriebolig Model { get; set; }

    MudDateRangePicker _picker;
    public DateRange _dateRange = new DateRange();

    private bool displayError = false;


    private void OnChangeHandler(DateRange e)
    {
        _picker.DateRange = e;
        _dateRange.Start = e.Start;
        _dateRange.End = e.End;

    }

    protected override async Task OnInitializedAsync()
    {

    }

    private bool checkDate(DateTime input)
    {
        if (input.Date.DayOfWeek == DayOfWeek.Saturday)
        {
            return false;
        }
        else
        {
            return true;
        }
    }


    private async Task BookFeriebolig()
    {
        _picker.Close();

        Booking booking = new Booking()
        {
            Pris = Model.PrisHoej,
            PointPris = BookingPointPris.HoejSaeson,
            UdlejDato = _picker.DateRange.Start.Value,
            AfrejseDato = _picker.DateRange.End.Value,
            FerieboligId = Model.Id,
            BrugerId = 1,
        };

        await bookingService.CreateBookingAsync(booking);



        // TODO - Metode til at finde den nuværende bruger...

        // HVis "Dummy" bruger, skal der ikke findes en bruger.

    }
}
