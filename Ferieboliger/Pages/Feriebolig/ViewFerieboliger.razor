@using Ferieboliger.BLL.Services;
@using Ferieboliger.ViewModel;
@using Ferieboliger.DAL.Models.Enums;

@inject IFerieboligService ferieboligService;
@inject NavigationManager navigationManager;
@inject IFiloplysningerService filoplysningerService;
@inject IHelperService helperService;

<MudGrid>

    <MudItem xs="12">
        <MudPaper Elevation="0" Class="d-flex mud-width-full align-center no-background">
            <MudCard Elevation="0" Class="d-flex oversigt__soeg no-background">
                <MudSelect Class="oversigt__soegefelter" @bind-SelectedValues="filtreretFeriebolig.BoligType" T="FerieboligType" MultiSelection="true" Label="Hustype" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">

                    @foreach (FerieboligType type in (FerieboligType[])Enum.GetValues(typeof(FerieboligType)))
                    {
                        <MudSelectItem T="FerieboligType" Value="@type"></MudSelectItem>
                    }
                </MudSelect>

                <MudSelect Class="oversigt__soegefelter" @bind-SelectedValues="filtreretFeriebolig.Byer" MultiSelection="true" T="string" Label="Område" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                    @foreach (var item in sorteredeByer)
                    {
                        <MudSelectItem T="string" Value="@item" />
                    }
                </MudSelect>

                <MudDateRangePicker Class="oversigt__soegefelter" @ref="_picker" Variant="Variant.Outlined" Label="Periode" @bind-DateRange="_dateRange" />

                <MudButton Class="oversigt__soegefelter" EndIcon="@Icons.Material.Filled.Search" OnClick="applyFiltering" Variant="Variant.Outlined" Color="Color.Primary">Søg</MudButton>
                <MudButton Class="oversigt__soegefelter" EndIcon="@Icons.Material.Filled.Clear" OnClick="removeFiltering" Variant="Variant.Outlined" Color="Color.Secondary">Nulstil</MudButton>

            </MudCard>
        </MudPaper>
    </MudItem>
    @if (!Busy)
    {
        @if (filtreret)
        {
            @foreach (var feriebolig in filteredFerieboliger)
            {
                <MudItem @onclick="@(async() => await NavigateFeriebolig(feriebolig))" xs="3">
                    <MudPaper Elevation="1">
                        @if (feriebolig.Filer != null)
                        {
                            List<string> _source = new List<string>();
                            @foreach (var image in feriebolig.Filer)
                            {
                                if (image.Type == FiloplysningType.Image)
                                {
                                    _source.Add(helperService.convertImageToDisplay(image.Data));
                                }
                            }

                            if (_source.Count() > 0)
                            {
                                <MudCarousel @ref="_carousel" ItemsSource="@_source" Style="height:25rem; " ShowArrows="@_arrows" ShowDelimiters="@_delimiters" AutoCycle="@_autocycle" DelimitersClass="feriebolig__karussel--delimiters" NavigationButtonsClass="feriebolig__karussel--navigation">
                                    <ItemTemplate>
                                        <div class="d-flex flex-column flex-column justify-center feriebolig__billeder" style="height:100%; background-image: url(@context)">
                                        </div>
                                    </ItemTemplate>
                                </MudCarousel>
                            }
                            else
                            {
                                <div class="d-flex flex-column flex-column justify-center feriebolig__billeder" style="height: 400px; background-color: lightgrey;">
                                </div>
                            }

                        }
                        <span class="oversigt__overskrift">@feriebolig.Adresse.By <br /></span>
                        <span class="oversigt__tekst">@feriebolig.AntalPersoner pers | @feriebolig.AntalKvadratmeter m2</span>

                    </MudPaper>
                </MudItem>
            }
        }
        else
        {
            @foreach (var feriebolig in alleFerieboliger)
            {
                <MudItem @onclick="@(async() => await NavigateFeriebolig(feriebolig))" xs="3">
                    <MudPaper Elevation="1">
                        @if (feriebolig.Filer != null)
                        {
                            List<string> _source = new List<string>();
                            @foreach (var image in feriebolig.Filer)
                            {
                                if (image.Type == FiloplysningType.Image)
                                {
                                    _source.Add(helperService.convertImageToDisplay(image.Data));
                                }
                            }

                            if (_source.Count() > 0)
                            {
                                <MudCarousel @ref="_carousel" ItemsSource="@_source" Style="height:25rem; " ShowArrows="@_arrows" ShowDelimiters="@_delimiters" AutoCycle="@_autocycle" DelimitersClass="feriebolig__karussel--delimiters" NavigationButtonsClass="feriebolig__karussel--navigation">
                                    <ItemTemplate>
                                        <div class="d-flex flex-column flex-column justify-center feriebolig__billeder" style="height:100%; background-image: url(@context);">
                                        </div>
                                    </ItemTemplate>
                                </MudCarousel>
                            }
                            else
                            {
                                <div class="d-flex flex-column flex-column justify-center feriebolig__billeder" style="height: 400px; background-color: lightgrey;">
                                </div>
                            }

                        }
                        <span class="oversigt__overskrift">@feriebolig.Adresse.By <br /></span>
                        <span class="oversigt__tekst">@feriebolig.AntalPersoner pers | @feriebolig.AntalKvadratmeter m2</span>
                    </MudPaper>
                </MudItem>
            }
        }
    }
    else
    {
        <MudItem xs="12">
            <MudText Typo="Typo.body1">Loader alle ferieboliger...</MudText>
            <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
        </MudItem>
    }


</MudGrid>

@code {
    List<Feriebolig> alleFerieboliger = new List<Feriebolig>();
    List<Feriebolig> filteredFerieboliger = new List<Feriebolig>();

    List<string> sorteredeByer = new List<string>();

    MudDateRangePicker _picker;
    DateRange _dateRange = new DateRange();

    public FiltreretFeriebolig filtreretFeriebolig = new FiltreretFeriebolig();
    private List<Ferieboliger.DAL.Models.Booking> nuvaerendeBookinger = new List<Ferieboliger.DAL.Models.Booking>();

    public bool filtreret = false;
    private bool Busy;

    private MudCarousel<string> _carousel;
    private bool _arrows = true;
    private bool _delimiters = false;
    private bool _autocycle = false;

    protected override async Task OnInitializedAsync()
    {
        Busy = true;
        try
        {
            alleFerieboliger = await ferieboligService.GetFerieboligerAsync();
            sorteredeByer = alleFerieboliger.Select(x => x.Adresse.By).Distinct().ToList();
        }
        finally
        {
            Busy = false;
        }

        await base.OnInitializedAsync();
    }

    public async Task NavigateFeriebolig(Feriebolig feriebolig)
    {
        navigationManager.NavigateTo("/ferieboliger/" + feriebolig.Id, false);
    }

    private void applyFiltering()
    {
        filteredFerieboliger.Clear();

        filteredFerieboliger = alleFerieboliger.ToList();
        filtreret = true;

        //Dato
        if (_dateRange.Start != null && _dateRange.End != null)
        {
            filtreretFeriebolig.StartDato = _dateRange.Start;
            filtreretFeriebolig.SlutDato = _dateRange.End;

            // Henter alle eksisterende bookings
            nuvaerendeBookinger = alleFerieboliger.SelectMany(x => x.Bookinger).ToList();

            // Hvis der findes en booking i forvejen på den given periode, henter vi dem ud.
            nuvaerendeBookinger = nuvaerendeBookinger.Where(x => x.SlutDato > filtreretFeriebolig.StartDato && x.StartDato < filtreretFeriebolig.SlutDato).ToList();


            // Ud fra de eksisterende bookings, fjerner vi ferieboligerne fra listen.
            foreach (var item in nuvaerendeBookinger)
            {
                filteredFerieboliger.RemoveAll(x => x.Id == item.FerieboligId);
            }
        }

        // Type
        if (filtreretFeriebolig.BoligType != null && filtreretFeriebolig.BoligType.Count() != 0)
        {
            FerieboligType[] arr = filtreretFeriebolig.BoligType.ToArray();

            var boligerToBeRemoved = alleFerieboliger.Where(x => !arr.ToList().Contains(x.Type)).ToList(); // NOT CONTAINS

            foreach (var item in boligerToBeRemoved)
            {
                filteredFerieboliger.RemoveAll(x => x.Id == item.Id);
            }
        }

        // Område / by
        if (filtreretFeriebolig.Byer != null && filtreretFeriebolig.Byer.Count() != 0)
        {
            string[] byer = filtreretFeriebolig.Byer.ToArray();
            var boligerToBeRemoved = alleFerieboliger.Where(x => !byer.Contains(x.Adresse.By)).ToList(); // NOT CONTAINS

            foreach (var item in boligerToBeRemoved)
            {
                filteredFerieboliger.RemoveAll(x => x.Id == item.Id);
            }
        }
    }

    private void removeFiltering()
    {
        filtreretFeriebolig = new FiltreretFeriebolig();
        _dateRange = new DateRange();
        filtreret = false;
    }
}
