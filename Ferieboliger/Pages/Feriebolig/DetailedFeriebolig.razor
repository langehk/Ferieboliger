@page "/ferieboliger/{Id:int}"

@using Ferieboliger.BLL.Services;
@using Ferieboliger.Pages.Feriebolig.EditModuler;
@using Ferieboliger.Pages.Feriebolig.Booking;
@using System.Globalization;

@inject IFerieboligService ferieboligService;
@inject IFacilitetService facilitetService;
@inject IFiloplysningerService filoplysningerService;

<MudPaper Width="100%" Elevation="0" Class="d-flex">
    <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
        <MudPaper Elevation="0">
            <MudText>
                <h3>@feriebolig.Adresse.By hus nr. @feriebolig.Id</h3>
                <p>
                    @feriebolig.Adresse.Vej, @feriebolig.Adresse.Postnummer @feriebolig.Adresse.By<br />
                    @feriebolig.Adresse.Land
                </p>
            </MudText>

            <MudCarousel @ref="_carousel" ItemsSource="@_source" Style="height:200px;" ShowArrows="@_arrows" ShowDelimiters="@_delimiters" AutoCycle="@_autocycle">
                <ItemTemplate>
                    <div class="d-flex flex-column flex-column justify-center" style="height:100%">
                        <MudIcon Class="mx-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
                        <img src="@context" />
                    </div>
                </ItemTemplate>
            </MudCarousel>
            <br />
            <MudButton Class="ma-2" Variant="Variant.Filled" Color="Color.Primary" OnClick="AddAsync">Tilføj</MudButton>
            <MudButton Class="ma-2" Variant="Variant.Filled" Color="Color.Error" OnClick="@(async () => await DeleteAsync(_carousel.SelectedIndex))">Slet</MudButton>

            <MudCard Elevation="0" Class="d-flex feriebolig__highlights">
                <EditHighlights Overskrift="Highlights" Model="@feriebolig"></EditHighlights>
            </MudCard>

            <MudCard Elevation="0" Class="feriebolig__rediger">
                <EditTextfields Model="@feriebolig" Overskrift="Beskrivelse" Property="@feriebolig.Beskrivelse" PropertyName="Beskrivelse"></EditTextfields>
            </MudCard>
            <MudCard Elevation="0" Class="feriebolig__rediger">
                <EditTextfields Model="@feriebolig" Overskrift="Bemærkninger" Property="@feriebolig.Bemaerkninger" PropertyName="Bemaerkninger"></EditTextfields>

            </MudCard>

            <MudCard Elevation="0">
                <EditDropdownMultiselect AlleFaciliteter="@alleFaciliteter" Model="@feriebolig" Overskrift="Faciliteter"></EditDropdownMultiselect>
            </MudCard>

        </MudPaper>
    </MudContainer>

    <MudContainer MaxWidth="MaxWidth.Small">

        <EditPriser Overskrift="Priser" Model="@feriebolig"></EditPriser>
        <!--TODO: lav lodtrækning og booking? måske kun booking??-->

        <MudCard Elevation="0">
            <BookingFeriebolig Model="@feriebolig"></BookingFeriebolig>
        </MudCard>

        <MudCard Elevation="0">
            <p class="feriebolig__overskrift">Bookinger</p>
            @foreach (var booking in feriebolig.Bookinger)
            {
                <p>@booking.Id: @booking.UdlejDato.ToString("dddd", inf) @booking.UdlejDato.ToShortDateString() - @booking.UdlejDato.ToString("dddd", inf) @booking.AfrejseDato.ToShortDateString()</p>
            }
        </MudCard>

        <MudCard Elevation="0">
            <EditNoegler Model="feriebolig"></EditNoegler>
        </MudCard>
    </MudContainer>
</MudPaper>

@code {
    [Parameter]
    public int Id { get; set; }

    List<Filoplysning> filoplysninger = new List<Filoplysning>();

    Feriebolig feriebolig = new Feriebolig();
    List<Facilitet> faciliteter = new List<Facilitet>();
    public List<Facilitet> alleFaciliteter = new List<Facilitet>();
    CultureInfo inf = new CultureInfo("da-DK");

    private MudCarousel<string> _carousel;
    private bool _arrows = true;
    private bool _delimiters = true;
    private bool _autocycle = false;

    private IList<string> _source = new List<string>();

    protected override async Task OnInitializedAsync()

    {
        alleFaciliteter = await facilitetService.GetFacilitiesAsync();
        feriebolig = await ferieboligService.GetFerieboligByIdAsync(Id);
        faciliteter = feriebolig.Faciliteter.ToList();
        filoplysninger = await filoplysningerService.DisplayImagesByIdAsync(Id);

        @foreach (var image in filoplysninger)
        {
            _source.Add(convertImageToDisplay(image.Data));
        }
    }

    private string convertImageToDisplay(byte[] image)
    {
        if (image != null)
        {
            var base64 = Convert.ToBase64String(image);
            var fs = string.Format("data:image/jpg;base64,{0}", base64);
            return fs;
        }
        return "";
    }

    private async Task AddAsync()
    {
        _source.Add($"Item {_source.Count + 1}");
        await Task.Delay(1);
        _carousel.MoveTo(_source.Count - 1);


    }

    private async Task DeleteAsync(int index)
    {
        if (_source.Any())
        {
            _source.RemoveAt(index);
            await Task.Delay(1);
            _carousel.MoveTo(System.Math.Max(System.Math.Min(index, _source.Count - 1), 0));
            await filoplysningerService.DeleteImageByIdAsync(filoplysninger.ElementAt(index).Id); 

        }

    }

}
