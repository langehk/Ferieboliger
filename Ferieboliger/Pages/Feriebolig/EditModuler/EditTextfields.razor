@using Ferieboliger.BLL.Services;

@inject IFerieboligService ferieboligService;

<MudCard Elevation="0" Class="d-flex align-center">
    <p class="feriebolig__overskrift">@Overskrift</p>
    <MudIconButton OnClick="OpenDialog" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Class="ma-2" />
</MudCard>
<MudText>
    @Property
</MudText>

<MudDialog @bind-IsVisible="visible" Options="dialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3" /> Rediger @Overskrift.ToLower()
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="@Property" Variant="Variant.Text" Class="mt-3" Lines="3"/>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Fortryd" Variant="Variant.Filled" Class="px-10">Fortryd</MudButton>
        <MudButton OnClick="GemFeriebolig" Variant="Variant.Filled" Color="Color.Primary" Class="px-10">Gem</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public string Property { get; set; }

    [Parameter]
    public string PropertyName { get; set; }

    [Parameter]
    public string Overskrift { get; set; }

    [Parameter]
    public Feriebolig Model { get; set; }

    private bool visible;
    private void OpenDialog() => visible = true;

    private DialogOptions dialogOptions = new() { FullWidth = true };

    public void Fortryd()
    {
        //Reset af værdien, så man kan fortryde

        if(Model.GetType().GetProperty(PropertyName).GetValue(Model) != null)
        {
            Property = Model.GetType().GetProperty(PropertyName).GetValue(Model).ToString();
        }

        visible = false;
    }

    public async Task GemFeriebolig()
    {
        // Overskriver værdien af den property vi gerne vil redigere.
        Model.GetType().GetProperty(PropertyName).SetValue(Model, Property, null);

        await ferieboligService.UpdateFeriebolig();
        visible = false;
    }
}
