@page "/booking/{Id:int}"

@using Ferieboliger.BLL.Services;

@inject IBookingService bookingService; 

<h3>Booking @booking.Id</h3>

<MudCard Elevation="0">
    Bruger: navn, email, adresse 
    Nøgler sendt
    Nøgler returneret 
    Opret kommentar 

    Feriebolig: id, adresse 

    Periode 
    Pris - kroner + point 

    Slet booking 

    Gensend bekræftelsesmail 


</MudCard>
<MudDivider></MudDivider>
<MudCard Elevation="0">
    <p class="feriebolig__overskrift">@booking.Bruger.Navn</p>
    <p>
        @booking.Bruger.Email <br />
        Her mangler vi en adresse på bruger
    </p>
    <MudCheckBox @ref="noeglerSendt" CheckedChanged="@((bool e) => UpdateNoeglerSendt(e))" Label="Nøgler afsendt"></MudCheckBox>
    <MudCheckBox @ref="noeglerRetur" CheckedChanged="@((bool e) => UpdateNoeglerRetur(e))" Label="Nøgler returneret"></MudCheckBox>
</MudCard>
<MudDivider></MudDivider>


@code {
    [Parameter]
    public int Id { get; set; }
    public Booking booking = new Booking() { Bruger = new Bruger(), Feriebolig = new Feriebolig() };

    MudCheckBox<bool> noeglerSendt;
    MudCheckBox<bool> noeglerRetur;

    protected override async Task OnInitializedAsync()
    {
        booking = await bookingService.GetBookingByIdAsync(Id);
        noeglerSendt.Checked = booking.NoeglerSendt;
        noeglerRetur.Checked = booking.NoeglerReturneret;
    }

    public async Task UpdateNoeglerRetur(bool e)
    {
        booking.NoeglerReturneret = e;
        await bookingService.UpdateBookingAsync();
    }

    public async Task UpdateNoeglerSendt(bool e)
    {
        booking.NoeglerSendt = e;
        await bookingService.UpdateBookingAsync();
    }
}
